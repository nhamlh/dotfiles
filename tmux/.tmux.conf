##########################################################
# General configuration
###########################################################

set -g prefix C-o                          # remap prefix to Control + o
set -sg escape-time 0                      # no delay for escape key press
set -g focus-events on                     # emit events for vim
set -g base-index 1                        # 0 is too far from ` ;)
set-option -g allow-rename off             # do not change title automatically
set-option -g renumber-windows on          # auto reodering windows when one is deleted
set-window-option -g mode-keys vi          # enable vi like cursor movement in copy mode
set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

###########################################################
# Key bindings
###########################################################

# Reload tmux config
bind-key R source-file ~/.tmux.conf

# vi-like key binding in code mode (tmux >= 2.4)
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi V send -X select-line
# MacOS
#bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Linux
bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# toggle pane title visibility
bind-key T run 'zsh -c "arr=( off top ) && tmux setw pane-border-status \${arr[\$(( \${arr[(I)#{pane-border-status}]} % 2 + 1 ))]}"'
# rename pane title
bind-key t command-prompt -p "(rename-pane)" -I "#T" "select-pane -T '%%'"

# easier and faster switching between next/prev window
bind-key -n M-H previous-window
bind-key -n M-L next-window

# Shift arrow to switch windows
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Use Alt-arrow keys with prefix key to resize panes
bind-key -r M-j resize-pane -D 2
bind-key -r M-k resize-pane -U 2
bind-key -r M-h resize-pane -L 2
bind-key -r M-l resize-pane -R 2

# Quickly kill a pane/window
bind-key k kill-pane
bind-key K kill-window

bind-key r respawn-pane -k

# seamlessly navigating between tmux and vim pane
# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
#bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# New pane will has the same PWD
bind-key h if-shell "$is_vim" "send-keys C-o h"  "split-window -v -c '#{pane_current_path}'"
bind-key v if-shell "$is_vim" "send-keys C-o v"  "split-window -h -c '#{pane_current_path}'"

# Zoom pane
bind-key z if-shell "$is_vim" "send-keys C-o z"  "resize-pane -Z"

###########################################################
# Left and right status line
###########################################################
set -g status-justify left
set -g status-position bottom
set -g status-interval 5
set -g status-style fg=blue,bg=black,none

set -g status-left-style "none"
set -g status-left-length "100"
set -g status-left "\
#[fg=colour15,bg=colour27] #S \
#[fg=colour27,bg=colour235,nobold,nounderscore,noitalics]\
#[fg=blue,bg=black]"

set -g status-right-style "none"
set -g status-right-length "100"
set -g status-right "\
#[fg=colour237,bg=colour235] \
#[bg=colour237,nobold,nounderscore,noitalics] #(zsh ~/.tmux/plugins/kube-tmux/kube.tmux 144 red cyan) \
#[fg=colour144]%d.%m.%Y  %H:%M\
#[fg=colour27,nobold,nounderscore,noitalics]\
#[fg=colour15,bg=colour27] #h "

set -g message-style "fg=colour144,bg=colour237"
set -g message-command-style "fg=colour144,bg=colour237"
set -g pane-border-style "fg=colour237"
set -g pane-active-border-style "fg=colour27"

###########################################################
# Status line for windows
###########################################################
setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour39,bg=colour235] #I-#W "
setw -g window-status-style "fg=colour248,bg=colour237,none"

setw -g window-status-current-style "fg=colour7,bg=colour2,bright"
setw -g window-status-current-format "\
#[fg=colour235,bg=colour2,nobold,nounderscore,noitalics]\
#[fg=colour227,bg=colour2] #I-#W #F\
#[fg=colour2,bg=colour235,nobold,nounderscore,noitalics]"

setw -g window-status-activity-style "fg=colour27,bg=colour234,none"

###########################################################
# Plugins
###########################################################
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
  set -g @open-editor 'O'                       # Open selected file with EDITOR
  set -g @open-S 'https://www.duckduckgo.com/'  # Search for selected word
set -g @plugin 'seebi/tmux-colors-solarized'
  set -g @colors-solarized 'dark'
set -g @plugin 'jonmosco/kube-tmux'
set -g @plugin 'jtbairdsr/tmux-inactive-panes'
  set -g @default-inactive-color 'dark'
  set -g @active-fg-color-dark colour2
set -g @plugin 'tmux-plugins/tmux-copycat'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

